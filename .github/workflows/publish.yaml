name: Build & Push (GHCR) - ga_ihosthardwarecontrol

on:
  push:
    branches: [ master ]
    tags: ['*']                 # allow tag-triggered releases
    paths:
      - "**"
      - ".github/workflows/publish.yaml"
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read
  packages: write

env:
  IMAGE_NS: ghcr.io/greenautarky
  ADDON_SLUG: ga_ihosthardwarecontrol        # underscore kept as requested
  ADDON_DIR: "" #uses root
  BASE_VERSION: 18.1.4          # single, no-`v` scheme for all arches

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - ha_arch: armv7
            platform: linux/arm/v7

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Minimal change: read version from config.yaml (fallback to config.json)
      - name: Read add-on version
        id: ver
        shell: bash
        run: |
          set -euo pipefail
          ver=""
          if [[ -f config.yaml ]]; then
            # Extract the first "version: ..." (handles quotes & spaces)
            ver=$(sed -nE 's/^[[:space:]]*version:[[:space:]]*"?([^"#]+)"?.*$/\1/p' config.yaml | head -n1 | xargs || true)
          fi
          if [[ -z "${ver}" && -f config.json ]]; then
            # Fallback if someone still has the json around
            ver=$(jq -r '.version // empty' config.json || true)
          fi
          if [[ -z "${ver}" ]]; then
            echo "::error::Could not read version from config.yaml (or config.json as fallback)"
            exit 1
          fi
          echo "Detected add-on version: $ver"
          echo "value=$ver" >> "$GITHUB_OUTPUT"

      - name: Metadata (tags/labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.IMAGE_NS }}/${{ env.ADDON_SLUG }}-${{ matrix.ha_arch }}
          tags: |
            type=raw,value=latest
            type=raw,value=${{ steps.ver.outputs.value }}
            type=ref,event=tag
          labels: |
            org.opencontainers.image.source=${{ github.repository }}
            org.opencontainers.image.revision=${{ github.sha }}

      - name: Resolve base image
        id: base
        shell: bash
        run: |
          img="ghcr.io/hassio-addons/base/armv7:${{ env.BASE_VERSION }}"
          echo "img=$img" >> "$GITHUB_OUTPUT"
          echo "Using base: $img"

      - name: Build & Push (${{ matrix.ha_arch }})
        uses: docker/build-push-action@v6
        with:
          context: ./${{ env.ADDON_DIR }}
          platforms: ${{ matrix.platform }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            BUILD_FROM=${{ steps.base.outputs.img }}
            BUILD_ARCH=${{ matrix.ha_arch }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
